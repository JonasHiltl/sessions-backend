schema user {
    document user {
        field user_id type string {
            indexing: summary | index
            match:word
            rank:filter
        }
        field username type string {
            indexing: summary | attribute | index
            index: enable-bm25
            match {
                gram
                gram-size: 3
            }
        }
        field firstname type string {
            indexing: summary | attribute | index
            index: enable-bm25
            match {
                gram
                gram-size: 3
            }
        }
        field lastname type string {
            indexing: summary | attribute | index
            index: enable-bm25
            match {
                gram
                gram-size: 3
            }
        }
        field id type tensor<int8>(uuid{}) {
            indexing: summary | attribute
            attribute:fast-search 
        }
    }
    fieldset default {
      fields: firstname, lastname, username
    }

    rank-profile friend inherits default {
      function social() {
        expression: sum(query(friends) * attribute(id)) 
      } 
      first-phase {
        expression: 2*social() + bm25(username) + bm25(firstname) + bm25(lastname)
      }
      match-features: social() bm25(username) bm25(firstname) bm25(lastname)
    }
}
