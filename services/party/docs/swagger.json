{
    "swagger": "2.0",
    "info": {
        "description": "This Microservice manages Party entities",
        "title": "Party Microservice",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8082",
    "basePath": "/",
    "paths": {
        "/": {
            "post": {
                "description": "Create a new Party in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CRUD"
                ],
                "summary": "Create a party",
                "parameters": [
                    {
                        "description": "The body to create a party",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreatePartyBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/datastruct.PublicParty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/near": {
            "get": {
                "description": "Get a list of parties near a location",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GEO"
                ],
                "summary": "Search by location",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "long",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Geohash precision",
                        "name": "precision",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastruct.PagedParties"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/{uId}": {
            "get": {
                "description": "Returns a list of parties of a user",
                "produces": [
                    "application/json"
                ],
                "summary": "Get parties of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "uId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastruct.PagedParties"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/{pId}": {
            "get": {
                "description": "Get a Party by it's id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CRUD"
                ],
                "summary": "Get a party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party Id",
                        "name": "pId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastruct.PublicParty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a party from our db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CRUD"
                ],
                "summary": "Delete a party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party Id",
                        "name": "pId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comtypes.MessageRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a party with the provided values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CRUD"
                ],
                "summary": "Update a Party",
                "parameters": [
                    {
                        "description": "The body to create a Party",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdatePartyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastruct.PublicParty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "comtypes.MessageRes": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "datastruct.PagedParties": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "string"
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datastruct.PublicParty"
                    }
                }
            }
        },
        "datastruct.PublicParty": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "handler.CreatePartyBody": {
            "type": "object",
            "required": [
                "lat",
                "long",
                "title"
            ],
            "properties": {
                "isPublic": {
                    "type": "boolean"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.UpdatePartyBody": {
            "type": "object",
            "required": [
                "lat",
                "long",
                "title"
            ],
            "properties": {
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}